# This makefile implements the make operations that the EPICS build system makes
# an uncomfortable meal of, and delegates the proper EPICS build to the
# companion makefile Makefile.epics

export MBF_TOP := $(CURDIR)/..
include $(MBF_TOP)/Makefile.common


MAKE_DEPENDS = opi/mbf/overview.edl opi/scripts/site configure/RELEASE


# Default target, delegated to EPICS build system once dependencies above have
# been resolved.
install: $(MAKE_DEPENDS)
	make -f Makefile.epics
.PHONY: install


# Pick up the EPICS configuration from the top level CONFIG file
configure/RELEASE: $(MBF_TOP)/CONFIG
	echo '# Automatically generated. DO NOT EDIT THIS FILE!!!' >$@
	echo EPICS_DEVICE = $(EPICS_DEVICE) >>$@
	echo EPICS_BASE = $(EPICS_BASE) >>$@


# Alas these soft links need to be wired up the hard way, as our elderly (RHEL6)
# version of ln doesn't support the -r flag yet.
opi/mbf/overview.edl: ../sites/$(SITE)/edm/overview.edl
	ln -sf ../../$< $@

opi/scripts/site:
	ln -sfn ../../../sites/$(SITE)/scripts $@


# We do our own cleaning.  The big problem is that the EPICS make absolutely
# needs a legitimate install of EPICS to be reachable via the configure/RELEASE
# file (or via the EPICS_BASE environment variable), and this can be a
# dependency too far.  Fortunately the EPICS clean is easy to do.
clean:
	find -type d -name O.\* -prune -exec rm -rf {} +
	find -type f -name \*~ -exec rm {} +
	rm -rf bin db dbd
	rm -f opi/mbf/overview.edl
	rm -f opi/scripts/site
	rm -f configure/RELEASE
.PHONY: clean
