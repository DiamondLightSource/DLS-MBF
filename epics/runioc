#!/bin/bash

Error() {
    echo >&2 "$@"
    exit 1
}


HERE="$(dirname "$0")"
IOC="$HERE"/bin/linux-x86_64/mbf

DEBUG=()
OPTS=()
HW_CONFIG=("$HERE"/hardware_delays)
NO_HARDWARE=0

while getopts 'vltquznh' option; do
    case "$option" in
        v)  DEBUG=(valgrind) ;;
        l)  DEBUG=("${DEBUG[@]}" --leak-check=full) ;;
        t)  DEBUG=("${DEBUG[@]}" --track-origins=yes) ;;
        q)  OPTS=("${OPTS[@]}" -q) ;;
        u)  OPTS=("${OPTS[@]}" -u) ;;
        z)  HW_CONFIG=() ;;
        n)  NO_HARDWARE=1
            OPTS=("${OPTS[@]}" -n) ;;
        h)  cat <<EOF
Usage: runioc [options] config-file
Starts MBF IOC with configured options.
    -v      Run with valgrind memory checker enabled
    -l      Add leak check to valgrind (must specify -v first)
    -t      Add track origins to valgrind (must specify -v first)
    -q      Disable PV logging
    -u      Don't lock hardware registers
    -z      Disable delay compensation
    -n      Run without initialising hardware
EOF
            exit 0;;
        *)  Error 'Invalid option: try -h for help' ;;
    esac
done
shift $((OPTIND-1))

SYS_CONFIG="${1:?Must specify system configuration}"
shift
[[ $# = 0 ]]  ||
    Error 'Unexpected extra arguments'


# Initialise the hardware.  This sets up the clock PLL, ADC and DAC.  The rest
# of the system will be initialised by the IOC proper.
if ((NO_HARDWARE == 0)); then "$HERE"/setup_mbf "$SYS_CONFIG"; fi  &&
# Now run the IOC
exec "${DEBUG[@]}" \
    "$IOC" -C "$HERE" "${OPTS[@]}" "$SYS_CONFIG" "${HW_CONFIG[@]}"
