#!/usr/bin/env python

# Tests DAC IO

import time

from mbf.driver.driver import SYSTEM, DAC_SPI

# Ensure DAC is powered on
assert SYSTEM.STATUS.DAC_OK, 'DAC power problem'


test_pattern = [ 0x5555, 0x5555, 0xAAAA, 0xAAAA ]
test_pattern = [ 0x0123, 0x4567, 0x89AB, 0xCDEF ]


# Set DAC output into test mode
SYSTEM.DAC_TEST[0] = (test_pattern[1] << 16) | test_pattern[0]
SYSTEM.DAC_TEST[1] = (test_pattern[3] << 16) | test_pattern[2]
SYSTEM.CONTROL.DAC_TESTMODE = 1

# Write expected test pattern into DAC
DAC_SPI[0x68] = test_pattern[0] & 0xFF
DAC_SPI[0x69] = test_pattern[0] >> 8
DAC_SPI[0x6A] = test_pattern[1] & 0xFF
DAC_SPI[0x6B] = test_pattern[1] >> 8
DAC_SPI[0x6C] = test_pattern[2] & 0xFF
DAC_SPI[0x6D] = test_pattern[2] >> 8
DAC_SPI[0x6E] = test_pattern[3] & 0xFF
DAC_SPI[0x6F] = test_pattern[3] >> 8

DAC_SPI[0x05] = 0x04
# Enable sample error detection
DAC_SPI[0x67] = 0x80
# Reset flags
DAC_SPI[0x06] = 0xFF
DAC_SPI[0x07] = 0xFF

time.sleep(1)

error = [ DAC_SPI[0x70], DAC_SPI[0x71], DAC_SPI[0x72], DAC_SPI[0x73], ]
print error
SYSTEM.CONTROL.DAC_TESTMODE = 0
