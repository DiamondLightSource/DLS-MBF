#!/usr/bin/env python

# Script for testing PLL behaviour

import time
import os
import sys

from mbf.driver import driver, config_pll, setup_pll

regs = driver.Registers(0)
pll = config_pll.SettingsBase(regs.PLL_SPI)
pll.verbose()

def setup():
    setup_pll.setup_reclocked(pll)
    setup_pll.setup_pll_ratios(pll, 13, 0, 5, 2, 381, 61)
    pll.write_config()

def enable():
    pll.enable_write()

def reset_fifo():
    DAC_SPI = regs.DAC_SPI
    DAC_SPI[0x17] = 0x05            # Set nominal FIFO phase offset to 5
    status = DAC_SPI[0X18]
    DAC_SPI[0x18] = status | 2      # Set soft alignment request bit
    status = DAC_SPI[0X18]
    assert status & 0x04            # Validate FIFO acknowlege
    DAC_SPI[0x18] = status & ~2     # Reset soft alignment bit
    status = DAC_SPI[0X18]
    assert not (status & 0x04)      # Validate FIFO acknowlege
    spacing = DAC_SPI[0X19]
    print 'spacing: %02x' % spacing
    assert spacing in [0x07, 0x0F]  # Validate programmed spacing

def do_sync():
    pll.SYNC_POL = 1
    time.sleep(0.1)
    pll.SYNC_POL = 0
