# This file was automatically generated on Mon 29 Oct 2018 10:34:46 CET.
# 
# *** Please do not edit this file: edit the source file instead. ***
# 

record(ai, "$(DEVICE):$(AXIS1):TUNE:CENTRE:HEIGHT")
{
    field(DESC, "Peak height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:CENTRE:HEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:CENTRE:PHASE")
{
    field(DESC, "Peak phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:CENTRE:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:CENTRE:POWER")
{
    field(DESC, "Peak power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:CENTRE:POWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:CENTRE:TUNE")
{
    field(DESC, "Peak centre frequency")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:CENTRE:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(bi, "$(DEVICE):$(AXIS1):TUNE:CENTRE:VALID")
{
    field(DESC, "Peak valid")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:CENTRE:VALID")
    field(ONAM, "Ok")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Invalid")
    field(ZSV,  "MINOR")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:CENTRE:WIDTH")
{
    field(DESC, "Peak width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:CENTRE:WIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ao, "$(DEVICE):$(AXIS1):TUNE:CONFIG:MAXIMUM_FIT_ERROR_S")
{
    field(DESC, "Reject overall fit if error this large")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS1):TUNE:CONFIG:MAXIMUM_FIT_ERROR_S")
    field(PREC, "3")
}

record(longout, "$(DEVICE):$(AXIS1):TUNE:CONFIG:MAX_PEAKS_S")
{
    field(DESC, "Maximum number of peaks to fit")
    field(DRVH, "5")
    field(DRVL, "1")
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(OUT,  "@$(DEVICE):$(AXIS1):TUNE:CONFIG:MAX_PEAKS_S")
}

record(ao, "$(DEVICE):$(AXIS1):TUNE:CONFIG:MINIMUM_HEIGHT_S")
{
    field(DESC, "Reject peaks shorter than this")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS1):TUNE:CONFIG:MINIMUM_HEIGHT_S")
    field(PREC, "3")
}

record(ao, "$(DEVICE):$(AXIS1):TUNE:CONFIG:MINIMUM_SPACING_S")
{
    field(DESC, "Reject peaks closer than this")
    field(DTYP, "Python")
    field(EGUF, "0.5")
    field(EGUL, "0")
    field(HOPR, "0.5")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS1):TUNE:CONFIG:MINIMUM_SPACING_S")
    field(PREC, "4")
}

record(ao, "$(DEVICE):$(AXIS1):TUNE:CONFIG:MINIMUM_WIDTH_S")
{
    field(DESC, "Reject peaks narrower than this")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS1):TUNE:CONFIG:MINIMUM_WIDTH_S")
    field(PREC, "2")
}

record(longout, "$(DEVICE):$(AXIS1):TUNE:CONFIG:SMOOTHING_S")
{
    field(DESC, "Degree of smoothing for 2D peak detect")
    field(DRVH, "64")
    field(DRVL, "8")
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(OUT,  "@$(DEVICE):$(AXIS1):TUNE:CONFIG:SMOOTHING_S")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:FIT_ERROR")
{
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:FIT_ERROR")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:I")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:I")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(DEVICE):$(AXIS1):TUNE:LAST_ERROR")
{
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LAST_ERROR")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:DPHASE")
{
    field(DESC, "Delta phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:DPHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:DTUNE")
{
    field(DESC, "Delta tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:DTUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:HEIGHT")
{
    field(DESC, "Peak height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:HEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:PHASE")
{
    field(DESC, "Peak phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:POWER")
{
    field(DESC, "Peak power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:POWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:RHEIGHT")
{
    field(DESC, "Relative height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:RHEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:RPOWER")
{
    field(DESC, "Relative power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:RPOWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:RWIDTH")
{
    field(DESC, "Relative width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:RWIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:TUNE")
{
    field(DESC, "Peak centre frequency")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(bi, "$(DEVICE):$(AXIS1):TUNE:LEFT:VALID")
{
    field(DESC, "Peak valid")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:VALID")
    field(ONAM, "Ok")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Invalid")
    field(ZSV,  "MINOR")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:LEFT:WIDTH")
{
    field(DESC, "Peak width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:LEFT:WIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:MI")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:MI")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:MPOWER")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:MPOWER")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:MQ")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:MQ")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:PHASE")
{
    field(DESC, "Measured tune phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:POWER")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:POWER")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:Q")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:Q")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:RESIDUE")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RESIDUE")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:DPHASE")
{
    field(DESC, "Delta phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:DPHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:DTUNE")
{
    field(DESC, "Delta tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:DTUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:HEIGHT")
{
    field(DESC, "Peak height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:HEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:PHASE")
{
    field(DESC, "Peak phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:POWER")
{
    field(DESC, "Peak power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:POWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:RHEIGHT")
{
    field(DESC, "Relative height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:RHEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:RPOWER")
{
    field(DESC, "Relative power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:RPOWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:RWIDTH")
{
    field(DESC, "Relative width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:RWIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:TUNE")
{
    field(DESC, "Peak centre frequency")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(bi, "$(DEVICE):$(AXIS1):TUNE:RIGHT:VALID")
{
    field(DESC, "Peak valid")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:VALID")
    field(ONAM, "Ok")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Invalid")
    field(ZSV,  "MINOR")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:RIGHT:WIDTH")
{
    field(DESC, "Peak width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:RIGHT:WIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS1):TUNE:SCALE")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:SCALE")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:SYNCTUNE")
{
    field(DESC, "Synchrotron tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:SYNCTUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS1):TUNE:TUNE")
{
    field(DESC, "Measured tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS1):TUNE:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:CENTRE:HEIGHT")
{
    field(DESC, "Peak height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:CENTRE:HEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:CENTRE:PHASE")
{
    field(DESC, "Peak phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:CENTRE:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:CENTRE:POWER")
{
    field(DESC, "Peak power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:CENTRE:POWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:CENTRE:TUNE")
{
    field(DESC, "Peak centre frequency")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:CENTRE:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(bi, "$(DEVICE):$(AXIS0):TUNE:CENTRE:VALID")
{
    field(DESC, "Peak valid")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:CENTRE:VALID")
    field(ONAM, "Ok")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Invalid")
    field(ZSV,  "MINOR")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:CENTRE:WIDTH")
{
    field(DESC, "Peak width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:CENTRE:WIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ao, "$(DEVICE):$(AXIS0):TUNE:CONFIG:MAXIMUM_FIT_ERROR_S")
{
    field(DESC, "Reject overall fit if error this large")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS0):TUNE:CONFIG:MAXIMUM_FIT_ERROR_S")
    field(PREC, "3")
}

record(longout, "$(DEVICE):$(AXIS0):TUNE:CONFIG:MAX_PEAKS_S")
{
    field(DESC, "Maximum number of peaks to fit")
    field(DRVH, "5")
    field(DRVL, "1")
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(OUT,  "@$(DEVICE):$(AXIS0):TUNE:CONFIG:MAX_PEAKS_S")
}

record(ao, "$(DEVICE):$(AXIS0):TUNE:CONFIG:MINIMUM_HEIGHT_S")
{
    field(DESC, "Reject peaks shorter than this")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS0):TUNE:CONFIG:MINIMUM_HEIGHT_S")
    field(PREC, "3")
}

record(ao, "$(DEVICE):$(AXIS0):TUNE:CONFIG:MINIMUM_SPACING_S")
{
    field(DESC, "Reject peaks closer than this")
    field(DTYP, "Python")
    field(EGUF, "0.5")
    field(EGUL, "0")
    field(HOPR, "0.5")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS0):TUNE:CONFIG:MINIMUM_SPACING_S")
    field(PREC, "4")
}

record(ao, "$(DEVICE):$(AXIS0):TUNE:CONFIG:MINIMUM_WIDTH_S")
{
    field(DESC, "Reject peaks narrower than this")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(LOPR, "0")
    field(OUT,  "@$(DEVICE):$(AXIS0):TUNE:CONFIG:MINIMUM_WIDTH_S")
    field(PREC, "2")
}

record(longout, "$(DEVICE):$(AXIS0):TUNE:CONFIG:SMOOTHING_S")
{
    field(DESC, "Degree of smoothing for 2D peak detect")
    field(DRVH, "64")
    field(DRVL, "8")
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(OUT,  "@$(DEVICE):$(AXIS0):TUNE:CONFIG:SMOOTHING_S")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:FIT_ERROR")
{
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:FIT_ERROR")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:I")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:I")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(DEVICE):$(AXIS0):TUNE:LAST_ERROR")
{
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LAST_ERROR")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:DPHASE")
{
    field(DESC, "Delta phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:DPHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:DTUNE")
{
    field(DESC, "Delta tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:DTUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:HEIGHT")
{
    field(DESC, "Peak height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:HEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:PHASE")
{
    field(DESC, "Peak phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:POWER")
{
    field(DESC, "Peak power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:POWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:RHEIGHT")
{
    field(DESC, "Relative height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:RHEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:RPOWER")
{
    field(DESC, "Relative power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:RPOWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:RWIDTH")
{
    field(DESC, "Relative width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:RWIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:TUNE")
{
    field(DESC, "Peak centre frequency")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(bi, "$(DEVICE):$(AXIS0):TUNE:LEFT:VALID")
{
    field(DESC, "Peak valid")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:VALID")
    field(ONAM, "Ok")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Invalid")
    field(ZSV,  "MINOR")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:LEFT:WIDTH")
{
    field(DESC, "Peak width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:LEFT:WIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:MI")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:MI")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:MPOWER")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:MPOWER")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:MQ")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:MQ")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:PHASE")
{
    field(DESC, "Measured tune phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:POWER")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:POWER")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:Q")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:Q")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:RESIDUE")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RESIDUE")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:DPHASE")
{
    field(DESC, "Delta phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:DPHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:DTUNE")
{
    field(DESC, "Delta tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:DTUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:HEIGHT")
{
    field(DESC, "Peak height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:HEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:PHASE")
{
    field(DESC, "Peak phase")
    field(DTYP, "Python")
    field(EGU,  "deg")
    field(EGUF, "180")
    field(EGUL, "-180")
    field(HOPR, "180")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:PHASE")
    field(LOPR, "-180")
    field(PREC, "1")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:POWER")
{
    field(DESC, "Peak power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:POWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:RHEIGHT")
{
    field(DESC, "Relative height")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:RHEIGHT")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:RPOWER")
{
    field(DESC, "Relative power")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:RPOWER")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:RWIDTH")
{
    field(DESC, "Relative width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:RWIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:TUNE")
{
    field(DESC, "Peak centre frequency")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(bi, "$(DEVICE):$(AXIS0):TUNE:RIGHT:VALID")
{
    field(DESC, "Peak valid")
    field(DTYP, "Python")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:VALID")
    field(ONAM, "Ok")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Invalid")
    field(ZSV,  "MINOR")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:RIGHT:WIDTH")
{
    field(DESC, "Peak width")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:RIGHT:WIDTH")
    field(LOPR, "0")
    field(PREC, "3")
    field(SCAN, "I/O Intr")
}

record(waveform, "$(DEVICE):$(AXIS0):TUNE:SCALE")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:SCALE")
    field(NELM, "4096")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:SYNCTUNE")
{
    field(DESC, "Synchrotron tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:SYNCTUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}

record(ai, "$(DEVICE):$(AXIS0):TUNE:TUNE")
{
    field(DESC, "Measured tune")
    field(DTYP, "Python")
    field(EGUF, "1")
    field(EGUL, "0")
    field(HOPR, "1")
    field(INP,  "@$(DEVICE):$(AXIS0):TUNE:TUNE")
    field(LOPR, "0")
    field(PREC, "5")
    field(SCAN, "I/O Intr")
}
