/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MBF;

import static MBF.MainPanel.errWin;
import fr.esrf.tangoatk.core.AttributePolledList;
import fr.esrf.tangoatk.core.ConnectionException;
import fr.esrf.tangoatk.core.attribute.EnumScalar;
import fr.esrf.tangoatk.core.attribute.NumberScalar;
import fr.esrf.tangoatk.core.attribute.NumberSpectrum;
import fr.esrf.tangoatk.widget.util.ATKGraphicsUtils;
import fr.esrf.tangoatk.widget.util.chart.JLDataView;
import java.awt.Color;
import java.awt.Dimension;

/**
 *
 * @author pons
 */
public class DACSetupPanel extends javax.swing.JFrame {

  private AttributePolledList attList;
  private ChartPanel chartPanel = null;
  private String devName;

  /**
   * Creates new form DACSetupPanel
   */
  public DACSetupPanel(String devName) {
    
    initComponents();
    
    this.devName = devName;
    attList = new AttributePolledList();
    attList.addErrorListener(errWin);

    try {
      
      NumberScalar outputDelay = (NumberScalar)attList.add(devName+"/DAC_DELAY_S");
      outputDelayEditor.setModel(outputDelay);
      EnumScalar outputEnable = (EnumScalar)attList.add(devName+"/DAC_ENABLE_S");
      outputEnableComboEditor.setEnumModel(outputEnable);
      EnumScalar mmsInput = (EnumScalar)attList.add(devName+"/DAC_MMS_SOURCE_S");
      mmsInputComboEditor.setEnumModel(mmsInput);
      EnumScalar dramInput = (EnumScalar)attList.add(devName+"/DAC_DRAM_SOURCE_S");
      dramInputComboEditor.setEnumModel(dramInput);
      NumberSpectrum filter = (NumberSpectrum)attList.add(devName+"/DAC_FILTER_S");
      filterViewer.setModel(filter);
      EnumScalar status = (EnumScalar)attList.add(devName+"/DAC_MMS_OVERFLOW");
      statusViewer.setModel(status);
      statusViewer.setBackgroundColor(Color.WHITE);
      
    } catch (ConnectionException ex) {      
    }
    
    filterViewer.setHeader("DAC compensation filter");
    filterViewer.getDataView().setMarker(JLDataView.MARKER_DOT);
    filterViewer.setPreferredSize(new Dimension(200,200));
    filterViewer.getXAxis().setGridVisible(true);
    filterViewer.getY1Axis().setGridVisible(true);
    
    attList.setRefreshInterval(1000);
    
    setTitle("DAC Setup [" + devName + "]");
    ATKGraphicsUtils.centerFrameOnScreen(this);
  }
  
  public void setVisible(boolean visible) {
    if(visible)
      attList.startRefresher();
    else
      attList.stopRefresher();    
    super.setVisible(visible);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    paramPanel = new javax.swing.JPanel();
    label2 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    outputDelayEditor = new fr.esrf.tangoatk.widget.attribute.NumberScalarWheelEditor();
    label4 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    outputEnableComboEditor = new fr.esrf.tangoatk.widget.attribute.EnumScalarComboEditor();
    label5 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    mmsInputComboEditor = new fr.esrf.tangoatk.widget.attribute.EnumScalarComboEditor();
    label6 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    dramInputComboEditor = new fr.esrf.tangoatk.widget.attribute.EnumScalarComboEditor();
    statusViewer = new fr.esrf.tangoatk.widget.attribute.SimpleEnumScalarViewer();
    jSmoothLabel4 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    filterPanel = new javax.swing.JPanel();
    filterViewer = new fr.esrf.tangoatk.widget.attribute.NumberSpectrumViewer();
    btnPanel = new javax.swing.JPanel();
    chartButton = new javax.swing.JButton();
    resetButton = new javax.swing.JButton();
    dismissButton = new javax.swing.JButton();

    paramPanel.setLayout(new java.awt.GridBagLayout());

    label2.setHorizontalAlignment(0);
    label2.setOpaque(false);
    label2.setText("Output delay");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    paramPanel.add(label2, gridBagConstraints);

    outputDelayEditor.setOpaque(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    paramPanel.add(outputDelayEditor, gridBagConstraints);

    label4.setHorizontalAlignment(0);
    label4.setOpaque(false);
    label4.setText("Output enable");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    paramPanel.add(label4, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    paramPanel.add(outputEnableComboEditor, gridBagConstraints);

    label5.setHorizontalAlignment(0);
    label5.setOpaque(false);
    label5.setText("MMS Input");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    paramPanel.add(label5, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    paramPanel.add(mmsInputComboEditor, gridBagConstraints);

    label6.setHorizontalAlignment(0);
    label6.setOpaque(false);
    label6.setText("DRAM Input");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    paramPanel.add(label6, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    paramPanel.add(dramInputComboEditor, gridBagConstraints);

    statusViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 10;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
    paramPanel.add(statusViewer, gridBagConstraints);

    jSmoothLabel4.setFocusable(false);
    jSmoothLabel4.setHorizontalAlignment(0);
    jSmoothLabel4.setOpaque(false);
    jSmoothLabel4.setText("Status");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    paramPanel.add(jSmoothLabel4, gridBagConstraints);

    getContentPane().add(paramPanel, java.awt.BorderLayout.CENTER);

    filterPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    filterPanel.setLayout(new java.awt.BorderLayout());

    filterViewer.setBackground(java.awt.SystemColor.control);
    filterPanel.add(filterViewer, java.awt.BorderLayout.CENTER);

    getContentPane().add(filterPanel, java.awt.BorderLayout.NORTH);

    btnPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

    chartButton.setText("Charts...");
    chartButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        chartButtonActionPerformed(evt);
      }
    });
    btnPanel.add(chartButton);

    resetButton.setText("Reset");
    resetButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        resetButtonActionPerformed(evt);
      }
    });
    btnPanel.add(resetButton);

    dismissButton.setText("Dismiss");
    dismissButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        dismissButtonActionPerformed(evt);
      }
    });
    btnPanel.add(dismissButton);

    getContentPane().add(btnPanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void chartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartButtonActionPerformed
    if( chartPanel== null )
      chartPanel = new ChartPanel(devName, "DAC");
    chartPanel.setVisible(true);
  }//GEN-LAST:event_chartButtonActionPerformed

  private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
    Utils.execCommand(devName, "DAC_MMS_RESET_FAULT_S");
  }//GEN-LAST:event_resetButtonActionPerformed

  private void dismissButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dismissButtonActionPerformed
    // TODO add your handling code here:
    setVisible(false);
  }//GEN-LAST:event_dismissButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel btnPanel;
  private javax.swing.JButton chartButton;
  private javax.swing.JButton dismissButton;
  private fr.esrf.tangoatk.widget.attribute.EnumScalarComboEditor dramInputComboEditor;
  private javax.swing.JPanel filterPanel;
  private fr.esrf.tangoatk.widget.attribute.NumberSpectrumViewer filterViewer;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel jSmoothLabel4;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel label2;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel label4;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel label5;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel label6;
  private fr.esrf.tangoatk.widget.attribute.EnumScalarComboEditor mmsInputComboEditor;
  private fr.esrf.tangoatk.widget.attribute.NumberScalarWheelEditor outputDelayEditor;
  private fr.esrf.tangoatk.widget.attribute.EnumScalarComboEditor outputEnableComboEditor;
  private javax.swing.JPanel paramPanel;
  private javax.swing.JButton resetButton;
  private fr.esrf.tangoatk.widget.attribute.SimpleEnumScalarViewer statusViewer;
  // End of variables declaration//GEN-END:variables
}
