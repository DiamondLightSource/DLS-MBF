/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MBF;

import static MBF.MainPanel.errWin;
import fr.esrf.tangoatk.core.AttributePolledList;
import fr.esrf.tangoatk.core.AttributeStateEvent;
import fr.esrf.tangoatk.core.ConnectionException;
import fr.esrf.tangoatk.core.ErrorEvent;
import fr.esrf.tangoatk.core.ISpectrumListener;
import fr.esrf.tangoatk.core.NumberSpectrumEvent;
import fr.esrf.tangoatk.core.attribute.NumberScalar;
import fr.esrf.tangoatk.core.attribute.NumberSpectrum;
import fr.esrf.tangoatk.widget.util.ATKGraphicsUtils;
import java.awt.Dimension;

/**
 *
 * @author pons
 */
public class SuperSEQPanel extends javax.swing.JFrame implements ISpectrumListener {

  private AttributePolledList attList;
  private String devName;

  /**
   * Creates new form SuperSEQPanel
   */
  public SuperSEQPanel(String devName) {
    
    initComponents();
    
    this.devName = devName;
    attList = new AttributePolledList();
    attList.addErrorListener(errWin);

    try {
      
      NumberScalar superW = (NumberScalar)attList.add(devName+"/SEQ_SUPER_COUNT_S");
      superEditor.setModel(superW);
      NumberScalar superR = (NumberScalar)attList.add(devName+"/SEQ_SUPER_COUNT");      
      superViewer.setModel(superR);
      superViewer.setBackgroundColor(getBackground());
      
      NumberSpectrum offsets = (NumberSpectrum)attList.add(devName+"/SEQ_SUPER_OFFSET_S");
      offsets.addSpectrumListener(this);
      offsetViewer.setModel(offsets);
      
      NumberScalar captureR = (NumberScalar)attList.add(devName+"/SEQ_LENGTH");      
      captureViewer.setModel(captureR);
      captureViewer.setBackgroundColor(getBackground());
      
      NumberScalar durationR = (NumberScalar)attList.add(devName+"/SEQ_DURATION");      
      durationViewer.setModel(durationR);
      durationViewer.setBackgroundColor(getBackground());

      NumberScalar durationTR = (NumberScalar)attList.add(devName+"/SEQ_DURATION_S");      
      durationTimeViewer.setModel(durationTR);
      durationTimeViewer.setBackgroundColor(getBackground());

      NumberScalar captureTotalR = (NumberScalar)attList.add(devName+"/SEQ_TOTAL_LENGTH");      
      captureTotalViewer.setModel(captureTotalR);
      captureTotalViewer.setBackgroundColor(getBackground());
      
      NumberScalar durationTotalR = (NumberScalar)attList.add(devName+"/SEQ_TOTAL_DURATION");      
      durationTotalViewer.setModel(durationTotalR);
      durationTotalViewer.setBackgroundColor(getBackground());

      NumberScalar durationTotalTR = (NumberScalar)attList.add(devName+"/SEQ_TOTAL_DURATION_S");      
      durationTotalTimeViewer.setModel(durationTotalTR);
      durationTotalTimeViewer.setBackgroundColor(getBackground());

    
    } catch (ConnectionException ex) {            
    }
    
    offsetViewer.setHeader("Super Sequencer Offsets");
    offsetViewer.setPreferredSize(new Dimension(500,300));
    offsetViewer.getXAxis().setGridVisible(true);
    offsetViewer.getY1Axis().setGridVisible(true);
        
    attList.setRefreshInterval(1000);
    
    setTitle("Super Sequencer [" + devName + "]");
    ATKGraphicsUtils.centerFrameOnScreen(this);
    
    
  }

  public void setVisible(boolean visible) {
    if(visible)
      attList.startRefresher();
    else
      attList.stopRefresher();    
    super.setVisible(visible);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    offsetViewer = new fr.esrf.tangoatk.widget.attribute.NumberSpectrumViewer();
    paramPanel = new javax.swing.JPanel();
    jSmoothLabel1 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    offset0Viewer = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    jSmoothLabel14 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    superEditor = new fr.esrf.tangoatk.widget.attribute.NumberScalarWheelEditor();
    superViewer = new fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer();
    jSmoothLabel2 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    captureViewer = new fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer();
    captureTotalViewer = new fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer();
    jSmoothLabel3 = new fr.esrf.tangoatk.widget.util.JSmoothLabel();
    durationTotalViewer = new fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer();
    durationTotalTimeViewer = new fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer();
    durationViewer = new fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer();
    durationTimeViewer = new fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer();
    btnPanel = new javax.swing.JPanel();
    resetButton = new javax.swing.JButton();
    dismissButton = new javax.swing.JButton();

    getContentPane().setLayout(new java.awt.GridBagLayout());

    offsetViewer.setBackground(java.awt.SystemColor.control);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(offsetViewer, gridBagConstraints);

    paramPanel.setLayout(new java.awt.GridBagLayout());

    jSmoothLabel1.setHorizontalAlignment(0);
    jSmoothLabel1.setOpaque(false);
    jSmoothLabel1.setText("Freq offset 0:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    paramPanel.add(jSmoothLabel1, gridBagConstraints);

    offset0Viewer.setBackground(java.awt.SystemColor.control);
    offset0Viewer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(offset0Viewer, gridBagConstraints);

    jSmoothLabel14.setFocusable(false);
    jSmoothLabel14.setHorizontalAlignment(0);
    jSmoothLabel14.setOpaque(false);
    jSmoothLabel14.setText("Super count");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    paramPanel.add(jSmoothLabel14, gridBagConstraints);

    superEditor.setOpaque(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(superEditor, gridBagConstraints);

    superViewer.setBorder(null);
    superViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 50;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(superViewer, gridBagConstraints);

    jSmoothLabel2.setHorizontalAlignment(0);
    jSmoothLabel2.setOpaque(false);
    jSmoothLabel2.setText("Capture count");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    paramPanel.add(jSmoothLabel2, gridBagConstraints);

    captureViewer.setBorder(null);
    captureViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 30;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(captureViewer, gridBagConstraints);

    captureTotalViewer.setBorder(null);
    captureTotalViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 50;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(captureTotalViewer, gridBagConstraints);

    jSmoothLabel3.setHorizontalAlignment(0);
    jSmoothLabel3.setOpaque(false);
    jSmoothLabel3.setText("Duration");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    paramPanel.add(jSmoothLabel3, gridBagConstraints);

    durationTotalViewer.setBorder(null);
    durationTotalViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 50;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(durationTotalViewer, gridBagConstraints);

    durationTotalTimeViewer.setBorder(null);
    durationTotalTimeViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 50;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(durationTotalTimeViewer, gridBagConstraints);

    durationViewer.setBorder(null);
    durationViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 30;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(durationViewer, gridBagConstraints);

    durationTimeViewer.setBorder(null);
    durationTimeViewer.setText("-----");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.ipadx = 30;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    paramPanel.add(durationTimeViewer, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    getContentPane().add(paramPanel, gridBagConstraints);

    btnPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

    resetButton.setText("Reset Offsets");
    resetButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        resetButtonActionPerformed(evt);
      }
    });
    btnPanel.add(resetButton);

    dismissButton.setText("Dismiss");
    dismissButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        dismissButtonActionPerformed(evt);
      }
    });
    btnPanel.add(dismissButton);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    getContentPane().add(btnPanel, gridBagConstraints);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void dismissButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dismissButtonActionPerformed
    setVisible(false);
  }//GEN-LAST:event_dismissButtonActionPerformed

  private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
    // TODO add your handling code here:
    Utils.execCommand(devName, "SEQ_SUPER_RESET_S");
    
  }//GEN-LAST:event_resetButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel btnPanel;
  private fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer captureTotalViewer;
  private fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer captureViewer;
  private javax.swing.JButton dismissButton;
  private fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer durationTimeViewer;
  private fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer durationTotalTimeViewer;
  private fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer durationTotalViewer;
  private fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer durationViewer;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel jSmoothLabel1;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel jSmoothLabel14;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel jSmoothLabel2;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel jSmoothLabel3;
  private fr.esrf.tangoatk.widget.util.JSmoothLabel offset0Viewer;
  private fr.esrf.tangoatk.widget.attribute.NumberSpectrumViewer offsetViewer;
  private javax.swing.JPanel paramPanel;
  private javax.swing.JButton resetButton;
  private fr.esrf.tangoatk.widget.attribute.NumberScalarWheelEditor superEditor;
  private fr.esrf.tangoatk.widget.attribute.SimpleScalarViewer superViewer;
  // End of variables declaration//GEN-END:variables

  @Override
  public void spectrumChange(NumberSpectrumEvent nse) {
    offset0Viewer.setText(Double.toString(nse.getValue()[0]));
  }

  @Override
  public void stateChange(AttributeStateEvent ase) {
  }

  @Override
  public void errorChange(ErrorEvent ee) {
    offset0Viewer.setText("-----");
  }
}
