/*----- PROTECTED REGION ID(MBFControlStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        MBFControlStateMachine.cpp
//
// description : State machine file for the MBFControl class
//
// project :     MBFControl
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
// Copyright (C): 2018
//                European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                France
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <MBFControl.h>

/*----- PROTECTED REGION END -----*/	//	MBFControl::MBFControlStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace MBFControl_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_Mode_allowed()
 *	Description : Execution allowed for Mode attribute
 */
//--------------------------------------------------------
bool MBFControl::is_Mode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Mode attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::ModeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::ModeStateAllowed_WRITE

	//	Not any excluded states for Mode attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::ModeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::ModeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_ConfigFileName_allowed()
 *	Description : Execution allowed for ConfigFileName attribute
 */
//--------------------------------------------------------
bool MBFControl::is_ConfigFileName_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for ConfigFileName attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::ConfigFileNameStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::ConfigFileNameStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_Tune_allowed()
 *	Description : Execution allowed for Tune attribute
 */
//--------------------------------------------------------
bool MBFControl::is_Tune_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Tune attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::TuneStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::TuneStateAllowed_WRITE

	//	Not any excluded states for Tune attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::TuneStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::TuneStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_FeedbackGain_allowed()
 *	Description : Execution allowed for FeedbackGain attribute
 */
//--------------------------------------------------------
bool MBFControl::is_FeedbackGain_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for FeedbackGain attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::FeedbackGainStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::FeedbackGainStateAllowed_WRITE

	//	Not any excluded states for FeedbackGain attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::FeedbackGainStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::FeedbackGainStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_FeedbackFineGain_allowed()
 *	Description : Execution allowed for FeedbackFineGain attribute
 */
//--------------------------------------------------------
bool MBFControl::is_FeedbackFineGain_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for FeedbackFineGain attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::FeedbackFineGainStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::FeedbackFineGainStateAllowed_WRITE

	//	Not any excluded states for FeedbackFineGain attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::FeedbackFineGainStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::FeedbackFineGainStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_FeedbackPhase_allowed()
 *	Description : Execution allowed for FeedbackPhase attribute
 */
//--------------------------------------------------------
bool MBFControl::is_FeedbackPhase_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for FeedbackPhase attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::FeedbackPhaseStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::FeedbackPhaseStateAllowed_WRITE

	//	Not any excluded states for FeedbackPhase attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::FeedbackPhaseStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::FeedbackPhaseStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_Harmonic_allowed()
 *	Description : Execution allowed for Harmonic attribute
 */
//--------------------------------------------------------
bool MBFControl::is_Harmonic_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Harmonic attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::HarmonicStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::HarmonicStateAllowed_WRITE

	//	Not any excluded states for Harmonic attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::HarmonicStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::HarmonicStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_SweepRange_allowed()
 *	Description : Execution allowed for SweepRange attribute
 */
//--------------------------------------------------------
bool MBFControl::is_SweepRange_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for SweepRange attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::SweepRangeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepRangeStateAllowed_WRITE

	//	Not any excluded states for SweepRange attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::SweepRangeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepRangeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_SweepDwellTime_allowed()
 *	Description : Execution allowed for SweepDwellTime attribute
 */
//--------------------------------------------------------
bool MBFControl::is_SweepDwellTime_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for SweepDwellTime attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::SweepDwellTimeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepDwellTimeStateAllowed_WRITE

	//	Not any excluded states for SweepDwellTime attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::SweepDwellTimeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepDwellTimeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_SweepGain_allowed()
 *	Description : Execution allowed for SweepGain attribute
 */
//--------------------------------------------------------
bool MBFControl::is_SweepGain_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for SweepGain attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::SweepGainStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepGainStateAllowed_WRITE

	//	Not any excluded states for SweepGain attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::SweepGainStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepGainStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_BlankingInterval_allowed()
 *	Description : Execution allowed for BlankingInterval attribute
 */
//--------------------------------------------------------
bool MBFControl::is_BlankingInterval_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for BlankingInterval attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::BlankingIntervalStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::BlankingIntervalStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_TuneOnSingleBunch_allowed()
 *	Description : Execution allowed for TuneOnSingleBunch attribute
 */
//--------------------------------------------------------
bool MBFControl::is_TuneOnSingleBunch_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for TuneOnSingleBunch attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::TuneOnSingleBunchStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::TuneOnSingleBunchStateAllowed_WRITE

	//	Not any excluded states for TuneOnSingleBunch attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::TuneOnSingleBunchStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::TuneOnSingleBunchStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_TuneBunch_allowed()
 *	Description : Execution allowed for TuneBunch attribute
 */
//--------------------------------------------------------
bool MBFControl::is_TuneBunch_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for TuneBunch attribute in Write access.
	/*----- PROTECTED REGION ID(MBFControl::TuneBunchStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::TuneBunchStateAllowed_WRITE

	//	Not any excluded states for TuneBunch attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::TuneBunchStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::TuneBunchStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_SweepState_allowed()
 *	Description : Execution allowed for SweepState attribute
 */
//--------------------------------------------------------
bool MBFControl::is_SweepState_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for SweepState attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::SweepStateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepStateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_MacroHistory_allowed()
 *	Description : Execution allowed for MacroHistory attribute
 */
//--------------------------------------------------------
bool MBFControl::is_MacroHistory_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for MacroHistory attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::MacroHistoryStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::MacroHistoryStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_ModeList_allowed()
 *	Description : Execution allowed for ModeList attribute
 */
//--------------------------------------------------------
bool MBFControl::is_ModeList_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for ModeList attribute in read access.
	/*----- PROTECTED REGION ID(MBFControl::ModeListStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::ModeListStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_LoadConfigurationFile_allowed()
 *	Description : Execution allowed for LoadConfigurationFile attribute
 */
//--------------------------------------------------------
bool MBFControl::is_LoadConfigurationFile_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for LoadConfigurationFile command.
	/*----- PROTECTED REGION ID(MBFControl::LoadConfigurationFileStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::LoadConfigurationFileStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_SaveConfigurationFile_allowed()
 *	Description : Execution allowed for SaveConfigurationFile attribute
 */
//--------------------------------------------------------
bool MBFControl::is_SaveConfigurationFile_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SaveConfigurationFile command.
	/*----- PROTECTED REGION ID(MBFControl::SaveConfigurationFileStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SaveConfigurationFileStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_GetConfigurationFilePath_allowed()
 *	Description : Execution allowed for GetConfigurationFilePath attribute
 */
//--------------------------------------------------------
bool MBFControl::is_GetConfigurationFilePath_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GetConfigurationFilePath command.
	/*----- PROTECTED REGION ID(MBFControl::GetConfigurationFilePathStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::GetConfigurationFilePathStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_On_allowed()
 *	Description : Execution allowed for On attribute
 */
//--------------------------------------------------------
bool MBFControl::is_On_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for On command.
	/*----- PROTECTED REGION ID(MBFControl::OnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::OnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_Off_allowed()
 *	Description : Execution allowed for Off attribute
 */
//--------------------------------------------------------
bool MBFControl::is_Off_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Off command.
	/*----- PROTECTED REGION ID(MBFControl::OffStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::OffStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_SweepOn_allowed()
 *	Description : Execution allowed for SweepOn attribute
 */
//--------------------------------------------------------
bool MBFControl::is_SweepOn_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SweepOn command.
	/*----- PROTECTED REGION ID(MBFControl::SweepOnStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepOnStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_SweepOff_allowed()
 *	Description : Execution allowed for SweepOff attribute
 */
//--------------------------------------------------------
bool MBFControl::is_SweepOff_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for SweepOff command.
	/*----- PROTECTED REGION ID(MBFControl::SweepOffStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::SweepOffStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_Clean_allowed()
 *	Description : Execution allowed for Clean attribute
 */
//--------------------------------------------------------
bool MBFControl::is_Clean_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Clean command.
	/*----- PROTECTED REGION ID(MBFControl::CleanStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::CleanStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_Reset_allowed()
 *	Description : Execution allowed for Reset attribute
 */
//--------------------------------------------------------
bool MBFControl::is_Reset_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Reset command.
	/*----- PROTECTED REGION ID(MBFControl::ResetStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::ResetStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MBFControl::is_ReLoad_allowed()
 *	Description : Execution allowed for ReLoad attribute
 */
//--------------------------------------------------------
bool MBFControl::is_ReLoad_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ReLoad command.
	/*----- PROTECTED REGION ID(MBFControl::ReLoadStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	MBFControl::ReLoadStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(MBFControl::MBFControlStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	MBFControl::MBFControlStateAllowed.AdditionalMethods

}	//	End of namespace
